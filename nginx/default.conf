upstream api_v3 {
    server 10.0.1.231:3001;
}
upstream lapi { server 10.0.10.84:3001; }
upstream api_v4 { server api_v4:3000; }

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}

server {
    listen 3001 ssl http2 default_server;
    listen [::]:3001 ssl http2 default_server;

    server_name _;

    location ^~ /.well-known/acme-challenge {
        alias /var/lib/certbot/.well-known/acme-challenge;
        default_type "text/plain";
        try_files $uri =404;
    }
    # A+ on ssllabs.com/ssltest
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    server_tokens off;
    # certbot places files in /etc/letsencrypt/live/mydomain.net/...
    ssl_certificate ssl/latest/fullchain.pem;
    ssl_certificate_key ssl/latest/privkey.pem;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';

    default_type "application/json";
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
    #proxy_http_version 1.1;
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Https-Protocol $ssl_protocol;
    client_max_body_size 10M;

    location / {
        proxy_pass https://api_v3;
    }

    location /api/v4 {
        proxy_pass http://api_v4;
    }
    # you can add other locations which are connected to an upstream server

    error_page   500 502 503 504  /50x.html;

    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}